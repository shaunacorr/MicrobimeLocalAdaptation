dev.off()
# FD Input Sub2
column_names <- names(FD_input_sub2)
gc_fits <- list()
for (col in column_names) {
gc_fit <- SummarizeGrowth(FD_input_sub2$time, FD_input_sub2[[col]])
plot(gc_fit)
gc_fits[[col]] <- gc_fit
}
pdf("FD_input_sub2.pdf")
for (col in column_names) {
if (!is.null(gc_fits[[col]])) {
plot(gc_fits[[col]], main = paste("Growth Curve for", col))
}
}
dev.off()
# FD_input_sub3
column_names <- names(FD_input_sub3)
gc_fits <- list()
for (col in column_names) {
gc_fit <- SummarizeGrowth(FD_input_sub3$time, FD_input_sub3[[col]])
plot(gc_fit)
gc_fits[[col]] <- gc_fit
}
pdf("FD_input_sub3.pdf")
for (col in column_names) {
if (!is.null(gc_fits[[col]])) {
plot(gc_fits[[col]], main = paste("Growth Curve for", col))
}
}
dev.off()
# Some isolates did not grow and curves fitted are erroneous - those that did not grow set to 0.
gc_DD_sub1[c(41:42,47,58,60,67,83,113,115),2:9] <- 0
gc_DF_sub1[c(25,27,42,30,50,58,63:64,114,129,137),2:9] <- 0
gc_DF_sub2[c(1:2),2:9] <- 0
gc_FD_sub1[c(3,28,44,31,55,56,61,66,69,82,84,85,91,93,95,110,100,124,117,127,128,131,135,138),2:9] <- 0
gc_FD_sub2[c(2),2:9] <- 0
gc_FF_sub1[c(25:27,29,42,32:33,36,38,51:52,55:56,61,63,75,91,94,113,129),2:9] <- 0
gc_DD <- bind_rows(gc_DD_sub1,gc_DD_sub2)
gc_DF <- bind_rows(gc_DF_sub1,gc_DF_sub2,gc_DF_sub3)
gc_FD <- bind_rows(gc_FD_sub1,gc_FD_sub2,gc_FD_sub3)
gc_FF <- bind_rows(gc_FF_sub1,gc_FF_sub2,gc_FF_sub3)
write.csv(gc_DD, file = "All_DD_AUC.csv", row.names = FALSE)
write.csv(gc_DF, file = "All_DF_AUC.csv", row.names = FALSE)
write.csv(gc_FD, file = "All_FD_AUC.csv", row.names = FALSE)
write.csv(gc_FF, file = "All_FF_AUC.csv", row.names = FALSE)
##read in the data set
mixed <- read.csv("interaction.csv", header = TRUE)
#Give the factors names
mixed$media<- factor(mixed$media,
levels = c("1","2"),
labels = c("dulse", "fucus"))
mixed$origin<- factor(mixed$origin,
levels = c(1,2),
labels = c("dulse", "fucus"))
mixed  <- mixed %>% mutate(
isolate = as.factor(isolate),
seaweed_rep = as.factor(seaweed_rep))
## remove instances where isolates have zero growth on either media
mixed_II <- mixed %>%
filter(auc_e != 0)%>%
mutate(complete = duplicated(isolate) | duplicated(isolate, fromLast = TRUE))%>%
filter(complete == "TRUE")
dulse <- subset(mixed_II, mixed_II$origin == 'dulse')
fit_dulse <- lmList(auc_e ~ media  |name, data = dulse)
fit_dulse <- coef(fit_dulse)
dulse <- unique(dulse[,c(2:3,5)])
dulse <- cbind(dulse,fit_dulse)
fucus <- subset(mixed_II, mixed_II$origin == 'fucus')
fit_fucus <- lmList(auc_e ~ media  |name, data = fucus)
fit_fucus <- coef(fit_fucus)
fucus <- unique(fucus[,c(2:3,5)])
fucus <- cbind(fucus,fit_fucus)
host_response <- rbind(dulse,fucus)
host_response <- host_response %>% rename(growth_response = mediafucus)
## linear mixed effects model ##
## Now we have a single predictor (origin) and we code seaweed replicate as a random effect
response_fit <- lmer(growth_response ~ origin + (1|seaweed_rep), host_response, REML=FALSE)
summary(response_fit)
## check that origin provides some predictive power
response_fit_II <- lmer(growth_response ~ 1 + (1|seaweed_rep), host_response, REML=FALSE)
summary(response_fit_II)
anova(response_fit, response_fit_II)
#investigate contrasts
emmeans(response_fit, pairwise~origin )
#Dulse
hist(dulse$mediafucus)
shapiro.test(dulse$mediafucus)
kruskal.test(mediafucus ~ seaweed_rep, data=dulse)
#Kruskal-Wallis chi-squared = 25.365, df = 5, p-value = 0.0001184
dunnTest(dulse$mediafucus, dulse$seaweed_rep, method="bh")
hist(fucus$mediafucus)
shapiro.test(fucus$mediafucus)
fucus_anova <- aov(mediafucus ~ seaweed_rep, data = fucus)
summary(fucus_anova)
# Check normality of residuals
shapiro.test(residuals(fucus_anova))
leveneTest(mediafucus ~ seaweed_rep, data = fucus)
# Plot a Q-Q plot
qqnorm(residuals(fucus_anova))
qqline(residuals(fucus_anova), col = "blue")
TukeyHSD(fucus_anova)
average_df2 <- mixed_II %>%
group_by(seaweed_rep, origin, media) %>%
summarise(mean_auc_e = mean(auc_e), .groups = "drop")
# Prepare summary statistics
summary_stats2 <- mixed_II %>%
group_by(origin, media) %>%
summarise(
mean_measurement = mean(auc_e),
sd_measurement= sd(auc_e),
se_measurement = sd(auc_e) / sqrt(n()),
n = n(),
margin_of_error = qt(0.975, df = n - 1) * se_measurement,
lower_bound = mean_measurement - margin_of_error,
upper_bound = mean_measurement + margin_of_error,
.groups = "drop"
)
# Create a merged plot
p2 <- ggplot() +
# Plotting the summary statistics with ribbons
geom_point(data = summary_stats2, aes(x = media, y = mean_measurement, shape = origin, color = origin), size = 3) +
geom_errorbar(data = summary_stats2, aes(x = media, ymin = mean_measurement - se_measurement, ymax = mean_measurement + se_measurement, color = origin), width = 0.1, size =1) +  # Error bars inherit color
geom_line(data = summary_stats2, aes(x = media, y = mean_measurement, group = origin, color = origin), size = 2) +
geom_ribbon(data = summary_stats2, aes(x = media, ymin = lower_bound, ymax = upper_bound, fill = origin), alpha = 0.3, colour = NA) +
# Plotting the average AUC for seaweed data
geom_point(data = average_df2, aes(x = media, y = mean_auc_e, shape = origin, color = origin), size = 2.5) +
geom_line(data = average_df2, aes(x = media, y = mean_auc_e, group = seaweed_rep, color = origin), linetype = "dotdash", size = 0.5) +
# Customizing the plot
theme_bw() +
theme(legend.position = "none",
axis.title.x = element_text(size = 11.5),  # Set x-axis title size
axis.title.y = element_text(size = 11.5),  # Set y-axis title size
axis.text.x = element_text(face = "italic")) +
labs(y = "Fitness (Average AUC)", x = "Environment") +
ylim(0, 1.4) +
scale_x_discrete(expand = c(0.3, 0), labels = c("Palmaria palmata", "Fucus serratus")) +
scale_color_manual(values = c("#660033", "#669966")) +
scale_fill_manual(values = c("#660033", "#669966"))
p2
response_plot2 <- ggplot(host_response) +
geom_boxplot(aes(growth_response, seaweed_rep, fill = origin)) +
geom_vline(xintercept = 0) +
labs(x = expression(paste(italic("P. palmaria"), " Environment","                   ",italic("F. serratus"), " Environment")),
y = 'Host Seaweed Replicate') +
theme_bw() +
theme(legend.position = "none",
axis.title.x = element_text(size = 10),
axis.text.x =  element_text(size = 8),
axis.title.y = element_text(size = 11.5)) +  # Adjust y-axis title size
scale_x_continuous(breaks = c(-1, -0.5, 0, 0.5, 1),  # Set custom breaks
labels = c("1", "0.5", "0", "0.5", "1")) +  # Custom labels
scale_color_manual(values = c("#660033", "#669966")) +
scale_fill_manual(values = c("#660033", "#669966"))
response_plot2
p2 <- p2 +
annotate("text", x = -Inf, y = Inf, label = " a)", hjust = 0, vjust = 1, size = 5)
response_plot2 <- response_plot2 +
annotate("text", x = -Inf, y = Inf, label = " b)", hjust = 0, vjust = 1, size = 5)
grid.arrange(p2,response_plot2, nrow=1)
Fig4 <- arrangeGrob(p2, response_plot2, nrow=1)
png("Figure4.png", width = 3000, height = 1500, res = 300)
grid.draw(Fig4)  # Draw the grob to the file
dev.off()
##read in the data set
mixed <- read.csv("interaction.csv", header = TRUE)
#Give the factors names
mixed$media<- factor(mixed$media,
levels = c("1","2"),
labels = c("dulse", "fucus"))
mixed$origin<- factor(mixed$origin,
levels = c(1,2),
labels = c("dulse", "fucus"))
mixed  <- mixed %>% mutate(
isolate = as.factor(isolate),
seaweed_rep = as.factor(seaweed_rep))
## remove instances where isolates have zero growth on either media
mixed_II <- mixed %>%
filter(auc_e != 0)%>%
mutate(complete = duplicated(isolate) | duplicated(isolate, fromLast = TRUE))%>%
filter(complete == "TRUE")
dulse <- subset(mixed_II, mixed_II$origin == 'dulse')
fit_dulse <- lmList(auc_e ~ media  |name, data = dulse)
fit_dulse <- coef(fit_dulse)
dulse <- unique(dulse[,c(2:3,5)])
dulse <- cbind(dulse,fit_dulse)
fucus <- subset(mixed_II, mixed_II$origin == 'fucus')
fit_fucus <- lmList(auc_e ~ media  |name, data = fucus)
fit_fucus <- coef(fit_fucus)
fucus <- unique(fucus[,c(2:3,5)])
fucus <- cbind(fucus,fit_fucus)
host_response <- rbind(dulse,fucus)
host_response <- host_response %>% rename(growth_response = mediafucus)
## linear mixed effects model ##
## Now we have a single predictor (origin) and we code seaweed replicate as a random effect
response_fit <- lmer(growth_response ~ origin + (1|seaweed_rep), host_response, REML=FALSE)
summary(response_fit)
## check that origin provides some predictive power
response_fit_II <- lmer(growth_response ~ 1 + (1|seaweed_rep), host_response, REML=FALSE)
summary(response_fit_II)
anova(response_fit, response_fit_II)
#investigate contrasts
emmeans(response_fit, pairwise~origin )
#Dulse
hist(dulse$mediafucus)
shapiro.test(dulse$mediafucus)
kruskal.test(mediafucus ~ seaweed_rep, data=dulse)
#Kruskal-Wallis chi-squared = 25.365, df = 5, p-value = 0.0001184
dunnTest(dulse$mediafucus, dulse$seaweed_rep, method="bh")
hist(fucus$mediafucus)
shapiro.test(fucus$mediafucus)
fucus_anova <- aov(mediafucus ~ seaweed_rep, data = fucus)
summary(fucus_anova)
# Check normality of residuals
shapiro.test(residuals(fucus_anova))
leveneTest(mediafucus ~ seaweed_rep, data = fucus)
# Plot a Q-Q plot
qqnorm(residuals(fucus_anova))
qqline(residuals(fucus_anova), col = "blue")
TukeyHSD(fucus_anova)
average_df2 <- mixed_II %>%
group_by(seaweed_rep, origin, media) %>%
summarise(mean_auc_e = mean(auc_e), .groups = "drop")
# Prepare summary statistics
summary_stats2 <- mixed_II %>%
group_by(origin, media) %>%
summarise(
mean_measurement = mean(auc_e),
sd_measurement= sd(auc_e),
se_measurement = sd(auc_e) / sqrt(n()),
n = n(),
margin_of_error = qt(0.975, df = n - 1) * se_measurement,
lower_bound = mean_measurement - margin_of_error,
upper_bound = mean_measurement + margin_of_error,
.groups = "drop"
)
# Create a merged plot
p2 <- ggplot() +
# Plotting the summary statistics with ribbons
geom_point(data = summary_stats2, aes(x = media, y = mean_measurement, shape = origin, color = origin), size = 3) +
geom_errorbar(data = summary_stats2, aes(x = media, ymin = mean_measurement - se_measurement, ymax = mean_measurement + se_measurement, color = origin), width = 0.1, size =1) +  # Error bars inherit color
geom_line(data = summary_stats2, aes(x = media, y = mean_measurement, group = origin, color = origin), size = 2) +
geom_ribbon(data = summary_stats2, aes(x = media, ymin = lower_bound, ymax = upper_bound, fill = origin), alpha = 0.3, colour = NA) +
# Plotting the average AUC for seaweed data
geom_point(data = average_df2, aes(x = media, y = mean_auc_e, shape = origin, color = origin), size = 2.5) +
geom_line(data = average_df2, aes(x = media, y = mean_auc_e, group = seaweed_rep, color = origin), linetype = "dotdash", size = 0.5) +
# Customizing the plot
theme_bw() +
theme(legend.position = "none",
axis.title.x = element_text(size = 11.5),  # Set x-axis title size
axis.title.y = element_text(size = 11.5),  # Set y-axis title size
axis.text.x = element_text(face = "italic")) +
labs(y = "Fitness (Average AUC)", x = "Environment") +
ylim(0, 1.4) +
scale_x_discrete(expand = c(0.3, 0), labels = c("Palmaria palmata", "Fucus serratus")) +
scale_color_manual(values = c("#660033", "#669966")) +
scale_fill_manual(values = c("#660033", "#669966"))
p2
library(tidyr)
library(growthcurver)
library(dplyr)
library(lme4)
library(tidyverse)
library (cowplot)
library(emmeans)
library(ggplot2)
library(FSA)
library(car)
##read in the data set
mixed <- read.csv("interaction.csv", header = TRUE)
#Give the factors names
mixed$media<- factor(mixed$media,
levels = c("1","2"),
labels = c("dulse", "fucus"))
mixed$origin<- factor(mixed$origin,
levels = c(1,2),
labels = c("dulse", "fucus"))
mixed  <- mixed %>% mutate(
isolate = as.factor(isolate),
seaweed_rep = as.factor(seaweed_rep))
## remove instances where isolates have zero growth on either media
mixed_II <- mixed %>%
filter(auc_e != 0)%>%
mutate(complete = duplicated(isolate) | duplicated(isolate, fromLast = TRUE))%>%
filter(complete == "TRUE")
dulse <- subset(mixed_II, mixed_II$origin == 'dulse')
fit_dulse <- lmList(auc_e ~ media  |name, data = dulse)
fit_dulse <- coef(fit_dulse)
dulse <- unique(dulse[,c(2:3,5)])
dulse <- cbind(dulse,fit_dulse)
fucus <- subset(mixed_II, mixed_II$origin == 'fucus')
fit_fucus <- lmList(auc_e ~ media  |name, data = fucus)
fit_fucus <- coef(fit_fucus)
fucus <- unique(fucus[,c(2:3,5)])
fucus <- cbind(fucus,fit_fucus)
host_response <- rbind(dulse,fucus)
host_response <- host_response %>% rename(growth_response = mediafucus)
## linear mixed effects model ##
## Now we have a single predictor (origin) and we code seaweed replicate as a random effect
response_fit <- lmer(growth_response ~ origin + (1|seaweed_rep), host_response, REML=FALSE)
summary(response_fit)
## check that origin provides some predictive power
response_fit_II <- lmer(growth_response ~ 1 + (1|seaweed_rep), host_response, REML=FALSE)
summary(response_fit_II)
anova(response_fit, response_fit_II)
#investigate contrasts
emmeans(response_fit, pairwise~origin )
install.packages(emmeans)
install.packages("emmeans")
install.packages("emmeans")
library(tidyr)
library(growthcurver)
library(dplyr)
library(lme4)
library(tidyverse)
library (cowplot)
library(emmeans)
library(ggplot2)
library(FSA)
library(car)
##read in the data set
mixed <- read.csv("interaction.csv", header = TRUE)
#Give the factors names
mixed$media<- factor(mixed$media,
levels = c("1","2"),
labels = c("dulse", "fucus"))
mixed$origin<- factor(mixed$origin,
levels = c(1,2),
labels = c("dulse", "fucus"))
mixed  <- mixed %>% mutate(
isolate = as.factor(isolate),
seaweed_rep = as.factor(seaweed_rep))
## remove instances where isolates have zero growth on either media
mixed_II <- mixed %>%
filter(auc_e != 0)%>%
mutate(complete = duplicated(isolate) | duplicated(isolate, fromLast = TRUE))%>%
filter(complete == "TRUE")
dulse <- subset(mixed_II, mixed_II$origin == 'dulse')
fit_dulse <- lmList(auc_e ~ media  |name, data = dulse)
fit_dulse <- coef(fit_dulse)
dulse <- unique(dulse[,c(2:3,5)])
dulse <- cbind(dulse,fit_dulse)
fucus <- subset(mixed_II, mixed_II$origin == 'fucus')
fit_fucus <- lmList(auc_e ~ media  |name, data = fucus)
fit_fucus <- coef(fit_fucus)
fucus <- unique(fucus[,c(2:3,5)])
fucus <- cbind(fucus,fit_fucus)
host_response <- rbind(dulse,fucus)
host_response <- host_response %>% rename(growth_response = mediafucus)
## linear mixed effects model ##
## Now we have a single predictor (origin) and we code seaweed replicate as a random effect
response_fit <- lmer(growth_response ~ origin + (1|seaweed_rep), host_response, REML=FALSE)
summary(response_fit)
## check that origin provides some predictive power
response_fit_II <- lmer(growth_response ~ 1 + (1|seaweed_rep), host_response, REML=FALSE)
summary(response_fit_II)
anova(response_fit, response_fit_II)
#investigate contrasts
emmeans(response_fit, pairwise~origin )
#Dulse
hist(dulse$mediafucus)
shapiro.test(dulse$mediafucus)
kruskal.test(mediafucus ~ seaweed_rep, data=dulse)
#Kruskal-Wallis chi-squared = 25.365, df = 5, p-value = 0.0001184
dunnTest(dulse$mediafucus, dulse$seaweed_rep, method="bh")
hist(fucus$mediafucus)
shapiro.test(fucus$mediafucus)
fucus_anova <- aov(mediafucus ~ seaweed_rep, data = fucus)
summary(fucus_anova)
# Check normality of residuals
shapiro.test(residuals(fucus_anova))
leveneTest(mediafucus ~ seaweed_rep, data = fucus)
# Plot a Q-Q plot
qqnorm(residuals(fucus_anova))
qqline(residuals(fucus_anova), col = "blue")
TukeyHSD(fucus_anova)
average_df2 <- mixed_II %>%
group_by(seaweed_rep, origin, media) %>%
summarise(mean_auc_e = mean(auc_e), .groups = "drop")
# Prepare summary statistics
summary_stats2 <- mixed_II %>%
group_by(origin, media) %>%
summarise(
mean_measurement = mean(auc_e),
sd_measurement= sd(auc_e),
se_measurement = sd(auc_e) / sqrt(n()),
n = n(),
margin_of_error = qt(0.975, df = n - 1) * se_measurement,
lower_bound = mean_measurement - margin_of_error,
upper_bound = mean_measurement + margin_of_error,
.groups = "drop"
)
# Create a merged plot
p2 <- ggplot() +
# Plotting the summary statistics with ribbons
geom_point(data = summary_stats2, aes(x = media, y = mean_measurement, shape = origin, color = origin), size = 3) +
geom_errorbar(data = summary_stats2, aes(x = media, ymin = mean_measurement - se_measurement, ymax = mean_measurement + se_measurement, color = origin), width = 0.1, size =1) +  # Error bars inherit color
geom_line(data = summary_stats2, aes(x = media, y = mean_measurement, group = origin, color = origin), size = 2) +
geom_ribbon(data = summary_stats2, aes(x = media, ymin = lower_bound, ymax = upper_bound, fill = origin), alpha = 0.3, colour = NA) +
# Plotting the average AUC for seaweed data
geom_point(data = average_df2, aes(x = media, y = mean_auc_e, shape = origin, color = origin), size = 2.5) +
geom_line(data = average_df2, aes(x = media, y = mean_auc_e, group = seaweed_rep, color = origin), linetype = "dotdash", size = 0.5) +
# Customizing the plot
theme_bw() +
theme(legend.position = "none",
axis.title.x = element_text(size = 11.5),  # Set x-axis title size
axis.title.y = element_text(size = 11.5),  # Set y-axis title size
axis.text.x = element_text(face = "italic")) +
labs(y = "Fitness (Average AUC)", x = "Environment") +
ylim(0, 1.4) +
scale_x_discrete(expand = c(0.3, 0), labels = c("Palmaria palmata", "Fucus serratus")) +
scale_color_manual(values = c("#660033", "#669966")) +
scale_fill_manual(values = c("#660033", "#669966"))
p2
response_plot2 <- ggplot(host_response) +
geom_boxplot(aes(growth_response, seaweed_rep, fill = origin)) +
geom_vline(xintercept = 0) +
labs(x = expression(paste(italic("P. palmaria"), " Environment","                   ",italic("F. serratus"), " Environment")),
y = 'Host Seaweed Replicate') +
theme_bw() +
theme(legend.position = "none",
axis.title.x = element_text(size = 10),
axis.text.x =  element_text(size = 8),
axis.title.y = element_text(size = 11.5)) +  # Adjust y-axis title size
scale_x_continuous(breaks = c(-1, -0.5, 0, 0.5, 1),  # Set custom breaks
labels = c("1", "0.5", "0", "0.5", "1")) +  # Custom labels
scale_color_manual(values = c("#660033", "#669966")) +
scale_fill_manual(values = c("#660033", "#669966"))
response_plot2
p2 <- p2 +
annotate("text", x = -Inf, y = Inf, label = " a)", hjust = 0, vjust = 1, size = 5)
response_plot2 <- response_plot2 +
annotate("text", x = -Inf, y = Inf, label = " b)", hjust = 0, vjust = 1, size = 5)
grid.arrange(p2,response_plot2, nrow=1)
Fig4 <- arrangeGrob(p2, response_plot2, nrow=1)
png("Figure4.png", width = 3000, height = 1500, res = 300)
grid.draw(Fig4)  # Draw the grob to the file
dev.off()
Figure4
Fig4
Fig4 <- arrangeGrob(p2, response_plot2, nrow=1)
library(gridExtra)
average_df2 <- mixed_II %>%
group_by(seaweed_rep, origin, media) %>%
summarise(mean_auc_e = mean(auc_e), .groups = "drop")
# Prepare summary statistics
summary_stats2 <- mixed_II %>%
group_by(origin, media) %>%
summarise(
mean_measurement = mean(auc_e),
sd_measurement= sd(auc_e),
se_measurement = sd(auc_e) / sqrt(n()),
n = n(),
margin_of_error = qt(0.975, df = n - 1) * se_measurement,
lower_bound = mean_measurement - margin_of_error,
upper_bound = mean_measurement + margin_of_error,
.groups = "drop"
)
# Create a merged plot
p2 <- ggplot() +
# Plotting the summary statistics with ribbons
geom_point(data = summary_stats2, aes(x = media, y = mean_measurement, shape = origin, color = origin), size = 3) +
geom_errorbar(data = summary_stats2, aes(x = media, ymin = mean_measurement - se_measurement, ymax = mean_measurement + se_measurement, color = origin), width = 0.1, size =1) +  # Error bars inherit color
geom_line(data = summary_stats2, aes(x = media, y = mean_measurement, group = origin, color = origin), size = 2) +
geom_ribbon(data = summary_stats2, aes(x = media, ymin = lower_bound, ymax = upper_bound, fill = origin), alpha = 0.3, colour = NA) +
# Plotting the average AUC for seaweed data
geom_point(data = average_df2, aes(x = media, y = mean_auc_e, shape = origin, color = origin), size = 2.5) +
geom_line(data = average_df2, aes(x = media, y = mean_auc_e, group = seaweed_rep, color = origin), linetype = "dotdash", size = 0.5) +
# Customizing the plot
theme_bw() +
theme(legend.position = "none",
axis.title.x = element_text(size = 11.5),  # Set x-axis title size
axis.title.y = element_text(size = 11.5),  # Set y-axis title size
axis.text.x = element_text(face = "italic")) +
labs(y = "Fitness (Average AUC)", x = "Environment") +
ylim(0, 1.4) +
scale_x_discrete(expand = c(0.3, 0), labels = c("Palmaria palmata", "Fucus serratus")) +
scale_color_manual(values = c("#660033", "#669966")) +
scale_fill_manual(values = c("#660033", "#669966"))
p2
response_plot2 <- ggplot(host_response) +
geom_boxplot(aes(growth_response, seaweed_rep, fill = origin)) +
geom_vline(xintercept = 0) +
labs(x = expression(paste(italic("P. palmaria"), " Environment","                   ",italic("F. serratus"), " Environment")),
y = 'Host Seaweed Replicate') +
theme_bw() +
theme(legend.position = "none",
axis.title.x = element_text(size = 10),
axis.text.x =  element_text(size = 8),
axis.title.y = element_text(size = 11.5)) +  # Adjust y-axis title size
scale_x_continuous(breaks = c(-1, -0.5, 0, 0.5, 1),  # Set custom breaks
labels = c("1", "0.5", "0", "0.5", "1")) +  # Custom labels
scale_color_manual(values = c("#660033", "#669966")) +
scale_fill_manual(values = c("#660033", "#669966"))
response_plot2
p2 <- p2 +
annotate("text", x = -Inf, y = Inf, label = " a)", hjust = 0, vjust = 1, size = 5)
response_plot2 <- response_plot2 +
annotate("text", x = -Inf, y = Inf, label = " b)", hjust = 0, vjust = 1, size = 5)
grid.arrange(p2,response_plot2, nrow=1)
Fig4 <- arrangeGrob(p2, response_plot2, nrow=1)
png("Figure4.png", width = 3000, height = 1500, res = 300)
grid.draw(Fig4)  # Draw the grob to the file
library(grid)
response_plot2 <- response_plot2 +
annotate("text", x = -Inf, y = Inf, label = " b)", hjust = 0, vjust = 1, size = 5)
grid.arrange(p2,response_plot2, nrow=1)
Fig4 <- arrangeGrob(p2, response_plot2, nrow=1)
png("Figure4.png", width = 3000, height = 1500, res = 300)
grid.draw(Fig4)  # Draw the grob to the file
dev.off()
Fig4
